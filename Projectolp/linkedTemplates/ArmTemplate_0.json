{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "Projectolp"
		},
		"sqldatabase_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'sqldatabase'"
		},
		"storageaccount_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'storageaccount'"
		},
		"sqldatabase_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "olpproject.database.windows.net"
		},
		"sqldatabase_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "projectolp1"
		},
		"sqldatabase_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "King"
		},
		"storageaccount_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://projectolp.dfs.core.windows.net/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/sqldatabase')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('sqldatabase_properties_typeProperties_server')]",
					"database": "[parameters('sqldatabase_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('sqldatabase_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('sqldatabase_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/storageaccount')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('storageaccount_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('storageaccount_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/config_fullload')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sqldatabase",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "src_dataset"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "src_container",
						"type": "varchar"
					},
					{
						"name": "src_folder",
						"type": "varchar"
					},
					{
						"name": "src_filename",
						"type": "varchar"
					},
					{
						"name": "destination_container",
						"type": "varchar"
					},
					{
						"name": "destination_folder",
						"type": "varchar"
					},
					{
						"name": "destination_filename",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "full_load"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/sqldatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/src_files')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "storageaccount",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"srccontainer": {
						"type": "string"
					},
					"srcfolder": {
						"type": "string"
					},
					"srcfilename": {
						"type": "string"
					}
				},
				"folder": {
					"name": "src_dataset"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().srcfilename",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().srcfolder",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().srccontainer",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/storageaccount')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/src_target')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "storageaccount",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"des_container": {
						"type": "string"
					},
					"des_folder": {
						"type": "string"
					},
					"des_filename": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Target_ds"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().des_filename",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().des_folder",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().des_container",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/storageaccount')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Full_load_all')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "lookup_for_config_full_load",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select * from full_load\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "config_fullload",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "lookup_for_config_full_load",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('lookup_for_config_full_load').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"dataIntegrationUnits": 8,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "src_files",
											"type": "DatasetReference",
											"parameters": {
												"srccontainer": {
													"value": "@item().src_container\r\n",
													"type": "Expression"
												},
												"srcfolder": {
													"value": "@item().src_folder \r\n",
													"type": "Expression"
												},
												"srcfilename": {
													"value": "@item().src_filename \r\n",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "src_target",
											"type": "DatasetReference",
											"parameters": {
												"des_container": {
													"value": "@item().destination_container \r\n",
													"type": "Expression"
												},
												"des_folder": {
													"value": "@concat(item().destination_folder,'/', utcNow('yyyy-MM-dd'))",
													"type": "Expression"
												},
												"des_filename": {
													"value": "@item().destination_filename",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Logs_on_Success",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Copy data1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[usp_insertlogdetails]",
										"storedProcedureParameters": {
											"billing_Reference_activity_Type": {
												"value": {
													"value": "@activity('Copy data1').output.billingReference.activityType",
													"type": "Expression"
												},
												"type": "String"
											},
											"dataFactory": {
												"value": {
													"value": "@pipeline().DataFactory",
													"type": "Expression"
												},
												"type": "String"
											},
											"destinationFile": {
												"value": {
													"value": "@item().destination_filename",
													"type": "Expression"
												},
												"type": "String"
											},
											"destinationFolder": {
												"value": {
													"value": "@item().destination_folder",
													"type": "Expression"
												},
												"type": "String"
											},
											"effective_Integration_Runtime": {
												"value": {
													"value": "@activity('Copy data1').output.effectiveIntegrationRuntime",
													"type": "Expression"
												},
												"type": "String"
											},
											"errors": {
												"value": {
													"value": "@activity('Copy data1').output.errors",
													"type": "Expression"
												},
												"type": "String"
											},
											"execution_Details_sink_type": {
												"value": {
													"value": "@activity('Copy data1').output.executionDetails[0].sink",
													"type": "Expression"
												},
												"type": "String"
											},
											"execution_Details_source_type": {
												"value": {
													"value": "@activity('Copy data1').output.executionDetails[0].source",
													"type": "Expression"
												},
												"type": "String"
											},
											"execution_Details_status": {
												"value": {
													"value": "@activity('Copy data1').output.executionDetails[0].status",
													"type": "Expression"
												},
												"type": "String"
											},
											"pipelineName": {
												"value": {
													"value": "@pipeline().Pipeline",
													"type": "Expression"
												},
												"type": "String"
											},
											"pipelineRunId": {
												"value": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"rowsCopied": {
												"value": {
													"value": "@activity('Copy data1').output.filesRead",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"rowsRead": {
												"value": {
													"value": "@activity('Copy data1').output.filesWritten",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"sourceFile": {
												"value": {
													"value": "@item().src_filename",
													"type": "Expression"
												},
												"type": "String"
											},
											"throughPut": {
												"value": {
													"value": "@activity('Copy data1').output.throughput",
													"type": "Expression"
												},
												"type": "Decimal"
											},
											"triggerName": {
												"value": {
													"value": "@pipeline().TriggerName",
													"type": "Expression"
												},
												"type": "String"
											},
											"triggerTime": {
												"value": {
													"value": "@pipeline().TriggerTime",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"triggerType": {
												"value": {
													"value": "@pipeline().TriggerType",
													"type": "Expression"
												},
												"type": "String"
											},
											"used_Data_Integration_Units": {
												"value": {
													"value": "@activity('Copy data1').output.usedDataIntegrationUnits",
													"type": "Expression"
												},
												"type": "Int32"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "sqldatabase",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Logs On_failure",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Copy data1",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[usp_insertlogdetails]",
										"storedProcedureParameters": {
											"billing_Reference_activity_Type": {
												"value": {
													"value": "@activity('Copy data1').output.billingReference.activityType",
													"type": "Expression"
												},
												"type": "String"
											},
											"dataFactory": {
												"value": {
													"value": "@pipeline().DataFactory",
													"type": "Expression"
												},
												"type": "String"
											},
											"destinationFile": {
												"value": {
													"value": "@item().destination_filename",
													"type": "Expression"
												},
												"type": "String"
											},
											"destinationFolder": {
												"value": {
													"value": "@item().destination_folder",
													"type": "Expression"
												},
												"type": "String"
											},
											"effective_Integration_Runtime": {
												"value": {
													"value": "@activity('Copy data1').output.effectiveIntegrationRuntime",
													"type": "Expression"
												},
												"type": "String"
											},
											"errors": {
												"value": {
													"value": "@activity('Copy data1').output.errors",
													"type": "Expression"
												},
												"type": "String"
											},
											"execution_Details_sink_type": {
												"value": {
													"value": "@activity('Copy data1').output.executionDetails[0].sink",
													"type": "Expression"
												},
												"type": "String"
											},
											"execution_Details_source_type": {
												"value": {
													"value": "@activity('Copy data1').output.executionDetails[0].source",
													"type": "Expression"
												},
												"type": "String"
											},
											"execution_Details_status": {
												"value": {
													"value": "@activity('Copy data1').output.executionDetails[0].status",
													"type": "Expression"
												},
												"type": "String"
											},
											"pipelineName": {
												"value": {
													"value": "@pipeline().Pipeline",
													"type": "Expression"
												},
												"type": "String"
											},
											"pipelineRunId": {
												"value": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"rowsCopied": {
												"value": {
													"value": "@activity('Copy data1').output.filesRead",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"rowsRead": {
												"value": {
													"value": "@activity('Copy data1').output.filesWritten",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"sourceFile": {
												"value": {
													"value": "@item().src_filename",
													"type": "Expression"
												},
												"type": "String"
											},
											"throughPut": {
												"value": {
													"value": "@activity('Copy data1').output.throughput",
													"type": "Expression"
												},
												"type": "Decimal"
											},
											"triggerName": {
												"value": {
													"value": "@pipeline().TriggerName",
													"type": "Expression"
												},
												"type": "String"
											},
											"triggerTime": {
												"value": {
													"value": "@pipeline().TriggerTime",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"triggerType": {
												"value": {
													"value": "@pipeline().TriggerType",
													"type": "Expression"
												},
												"type": "String"
											},
											"used_Data_Integration_Units": {
												"value": {
													"value": "@activity('Copy data1').output.usedDataIntegrationUnits",
													"type": "Expression"
												},
												"type": "Int32"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "sqldatabase",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Full_load_src_stg"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/config_fullload')]",
				"[concat(variables('factoryId'), '/datasets/src_files')]",
				"[concat(variables('factoryId'), '/datasets/src_target')]",
				"[concat(variables('factoryId'), '/linkedServices/sqldatabase')]"
			]
		}
	]
}